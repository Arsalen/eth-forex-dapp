{
  "contractName": "Forex",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "rate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            }
          ],
          "internalType": "struct Forex.Pair",
          "name": "pair",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "rate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            }
          ],
          "internalType": "struct Forex.Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"rate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"}],\"internalType\":\"struct Forex.Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"rate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"}],\"internalType\":\"struct Forex.Pair\",\"name\":\"pair\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/arsalen/Desktop/forex/eth-forex-dapp/contracts/Forex.sol\":\"Forex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/arsalen/Desktop/forex/eth-forex-dapp/contracts/Forex.sol\":{\"keccak256\":\"0xbbac4b7aa645e35a41b685a7a0fb73563186096465bfb00390faa68f9c622464\",\"urls\":[\"bzz-raw://18e0517b1e7611e11e6e0f2fd725560f289264dc8952c13132a34eeee641d04e\",\"dweb:/ipfs/QmXk4RfurWgc5VUC92a87N2h1qqDJ44yjqh6UFeiqCe7vc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109ab806100606000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063693ec85e14610051578063794e2631146100815780638da5cb5b1461009d578063b6a5d7de146100bb575b600080fd5b61006b6004803603610066919081019061063e565b6100d7565b60405161007891906107ed565b60405180910390f35b61009b6004803603610096919081019061067f565b610274565b005b6100a5610348565b6040516100b291906107b0565b60405180910390f35b6100d560048036036100d09190810190610615565b61036d565b005b6100df61041d565b6000826040516020016100f291906107cb565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101c15780601f10610196576101008083540402835291602001916101c1565b820191906000526020600020905b8154815290600101906020018083116101a457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610344576000826040516020016102d991906107cb565b60405160208183030381529060405280519060200120905081600260008381526020019081526020016000206000820151816000019080519060200190610321929190610437565b50602082015181600101908051906020019061033e929190610437565b50905050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561041a5760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b604051806040016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061047857805160ff19168380011785556104a6565b828001600101855582156104a6579182015b828111156104a557825182559160200191906001019061048a565b5b5090506104b391906104b7565b5090565b6104d991905b808211156104d55760008160009055506001016104bd565b5090565b90565b6000813590506104eb81610951565b92915050565b600082601f83011261050257600080fd5b81356105156105108261083c565b61080f565b9150808252602083016020830185838301111561053157600080fd5b61053c8382846108fe565b50505092915050565b600082601f83011261055657600080fd5b813561056961056482610868565b61080f565b9150808252602083016020830185838301111561058557600080fd5b6105908382846108fe565b50505092915050565b6000604082840312156105ab57600080fd5b6105b5604061080f565b9050600082013567ffffffffffffffff8111156105d157600080fd5b6105dd848285016104f1565b600083015250602082013567ffffffffffffffff8111156105fd57600080fd5b610609848285016104f1565b60208301525092915050565b60006020828403121561062757600080fd5b6000610635848285016104dc565b91505092915050565b60006020828403121561065057600080fd5b600082013567ffffffffffffffff81111561066a57600080fd5b61067684828501610545565b91505092915050565b6000806040838503121561069257600080fd5b600083013567ffffffffffffffff8111156106ac57600080fd5b6106b885828601610545565b925050602083013567ffffffffffffffff8111156106d557600080fd5b6106e185828601610599565b9150509250929050565b6106f4816108cc565b82525050565b60006107058261089f565b61070f81856108bb565b935061071f81856020860161090d565b61072881610940565b840191505092915050565b600061073e82610894565b61074881856108aa565b935061075881856020860161090d565b61076181610940565b840191505092915050565b600060408301600083015184820360008601526107898282610733565b915050602083015184820360208601526107a38282610733565b9150508091505092915050565b60006020820190506107c560008301846106eb565b92915050565b600060208201905081810360008301526107e581846106fa565b905092915050565b60006020820190508181036000830152610807818461076c565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561083257600080fd5b8060405250919050565b600067ffffffffffffffff82111561085357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561087f57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108d7826108de565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561092b578082015181840152602081019050610910565b8381111561093a576000848401525b50505050565b6000601f19601f8301169050919050565b61095a816108cc565b811461096557600080fd5b5056fea365627a7a723158208f9beebc533527a98f59710994ef61d1d580c3ff0ed59955f8ad7990552c95446c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063693ec85e14610051578063794e2631146100815780638da5cb5b1461009d578063b6a5d7de146100bb575b600080fd5b61006b6004803603610066919081019061063e565b6100d7565b60405161007891906107ed565b60405180910390f35b61009b6004803603610096919081019061067f565b610274565b005b6100a5610348565b6040516100b291906107b0565b60405180910390f35b6100d560048036036100d09190810190610615565b61036d565b005b6100df61041d565b6000826040516020016100f291906107cb565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101c15780601f10610196576101008083540402835291602001916101c1565b820191906000526020600020905b8154815290600101906020018083116101a457829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102635780601f1061023857610100808354040283529160200191610263565b820191906000526020600020905b81548152906001019060200180831161024657829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610344576000826040516020016102d991906107cb565b60405160208183030381529060405280519060200120905081600260008381526020019081526020016000206000820151816000019080519060200190610321929190610437565b50602082015181600101908051906020019061033e929190610437565b50905050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561041a5760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b604051806040016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061047857805160ff19168380011785556104a6565b828001600101855582156104a6579182015b828111156104a557825182559160200191906001019061048a565b5b5090506104b391906104b7565b5090565b6104d991905b808211156104d55760008160009055506001016104bd565b5090565b90565b6000813590506104eb81610951565b92915050565b600082601f83011261050257600080fd5b81356105156105108261083c565b61080f565b9150808252602083016020830185838301111561053157600080fd5b61053c8382846108fe565b50505092915050565b600082601f83011261055657600080fd5b813561056961056482610868565b61080f565b9150808252602083016020830185838301111561058557600080fd5b6105908382846108fe565b50505092915050565b6000604082840312156105ab57600080fd5b6105b5604061080f565b9050600082013567ffffffffffffffff8111156105d157600080fd5b6105dd848285016104f1565b600083015250602082013567ffffffffffffffff8111156105fd57600080fd5b610609848285016104f1565b60208301525092915050565b60006020828403121561062757600080fd5b6000610635848285016104dc565b91505092915050565b60006020828403121561065057600080fd5b600082013567ffffffffffffffff81111561066a57600080fd5b61067684828501610545565b91505092915050565b6000806040838503121561069257600080fd5b600083013567ffffffffffffffff8111156106ac57600080fd5b6106b885828601610545565b925050602083013567ffffffffffffffff8111156106d557600080fd5b6106e185828601610599565b9150509250929050565b6106f4816108cc565b82525050565b60006107058261089f565b61070f81856108bb565b935061071f81856020860161090d565b61072881610940565b840191505092915050565b600061073e82610894565b61074881856108aa565b935061075881856020860161090d565b61076181610940565b840191505092915050565b600060408301600083015184820360008601526107898282610733565b915050602083015184820360208601526107a38282610733565b9150508091505092915050565b60006020820190506107c560008301846106eb565b92915050565b600060208201905081810360008301526107e581846106fa565b905092915050565b60006020820190508181036000830152610807818461076c565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561083257600080fd5b8060405250919050565b600067ffffffffffffffff82111561085357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561087f57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006108d7826108de565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561092b578082015181840152602081019050610910565b8381111561093a576000848401525b50505050565b6000601f19601f8301169050919050565b61095a816108cc565b811461096557600080fd5b5056fea365627a7a723158208f9beebc533527a98f59710994ef61d1d580c3ff0ed59955f8ad7990552c95446c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "101:825:0:-;;;296:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;296:56:0;335:10;327:5;;:18;;;;;;;;;;;;;;;;;;101:825;;;;;;",
  "deployedSourceMap": "101:825:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;101:825:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;590:165;;;;;;;;;;;;;;;;:::i;:::-;;123:20;;;:::i;:::-;;;;;;;;;;;;;;;;498:86;;;;;;;;;;;;;;;;:::i;:::-;;761:163;815:11;;:::i;:::-;839:16;879:4;868:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;868:16:0;;;858:27;;;;;;839:46;;902:5;:15;908:8;902:15;;;;;;;;;;;895:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:163;;;:::o;590:165::-;465:5;:17;471:10;465:17;;;;;;;;;;;;;;;;;;;;;;;;;461:24;;;670:16;710:4;699:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;699:16:0;;;689:27;;;;;;670:46;;744:4;726:5;:15;732:8;726:15;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;484:1;461:24;590:165;;:::o;123:20::-;;;;;;;;;;;;;:::o;498:86::-;408:5;;;;;;;;;;;394:19;;:10;:19;;;390:26;;;573:4;559:5;:11;565:4;559:11;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;390:26;498:86;:::o;101:825::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:434;;241:3;234:4;226:6;222:17;218:27;208:2;;259:1;256;249:12;208:2;296:6;283:20;318:61;333:45;371:6;333:45;;;318:61;;;309:70;;399:6;392:5;385:21;435:4;427:6;423:17;468:4;461:5;457:16;503:3;494:6;489:3;485:16;482:25;479:2;;;520:1;517;510:12;479:2;530:41;564:6;559:3;554;530:41;;;201:376;;;;;;;;586:442;;688:3;681:4;673:6;669:17;665:27;655:2;;706:1;703;696:12;655:2;743:6;730:20;765:65;780:49;822:6;780:49;;;765:65;;;756:74;;850:6;843:5;836:21;886:4;878:6;874:17;919:4;912:5;908:16;954:3;945:6;940:3;936:16;933:25;930:2;;;971:1;968;961:12;930:2;981:41;1015:6;1010:3;1005;981:41;;;648:380;;;;;;;;1060:650;;1168:4;1156:9;1151:3;1147:19;1143:30;1140:2;;;1186:1;1183;1176:12;1140:2;1204:20;1219:4;1204:20;;;1195:29;;1302:1;1291:9;1287:17;1274:31;1325:18;1317:6;1314:30;1311:2;;;1357:1;1354;1347:12;1311:2;1392:55;1443:3;1434:6;1423:9;1419:22;1392:55;;;1385:4;1378:5;1374:16;1367:81;1234:225;1542:2;1531:9;1527:18;1514:32;1566:18;1558:6;1555:30;1552:2;;;1598:1;1595;1588:12;1552:2;1633:55;1684:3;1675:6;1664:9;1660:22;1633:55;;;1626:4;1619:5;1615:16;1608:81;1469:231;1134:576;;;;;1717:241;;1821:2;1809:9;1800:7;1796:23;1792:32;1789:2;;;1837:1;1834;1827:12;1789:2;1872:1;1889:53;1934:7;1925:6;1914:9;1910:22;1889:53;;;1879:63;;1851:97;1783:175;;;;;1965:347;;2079:2;2067:9;2058:7;2054:23;2050:32;2047:2;;;2095:1;2092;2085:12;2047:2;2158:1;2147:9;2143:17;2130:31;2181:18;2173:6;2170:30;2167:2;;;2213:1;2210;2203:12;2167:2;2233:63;2288:7;2279:6;2268:9;2264:22;2233:63;;;2223:73;;2109:193;2041:271;;;;;2319:596;;;2469:2;2457:9;2448:7;2444:23;2440:32;2437:2;;;2485:1;2482;2475:12;2437:2;2548:1;2537:9;2533:17;2520:31;2571:18;2563:6;2560:30;2557:2;;;2603:1;2600;2593:12;2557:2;2623:63;2678:7;2669:6;2658:9;2654:22;2623:63;;;2613:73;;2499:193;2751:2;2740:9;2736:18;2723:32;2775:18;2767:6;2764:30;2761:2;;;2807:1;2804;2797:12;2761:2;2827:72;2891:7;2882:6;2871:9;2867:22;2827:72;;;2817:82;;2702:203;2431:484;;;;;;2922:113;3005:24;3023:5;3005:24;;;3000:3;2993:37;2987:48;;;3042:347;;3154:39;3187:5;3154:39;;;3205:71;3269:6;3264:3;3205:71;;;3198:78;;3281:52;3326:6;3321:3;3314:4;3307:5;3303:16;3281:52;;;3354:29;3376:6;3354:29;;;3349:3;3345:39;3338:46;;3134:255;;;;;;3396:319;;3494:35;3523:5;3494:35;;;3541:61;3595:6;3590:3;3541:61;;;3534:68;;3607:52;3652:6;3647:3;3640:4;3633:5;3629:16;3607:52;;;3680:29;3702:6;3680:29;;;3675:3;3671:39;3664:46;;3474:241;;;;;;3767:632;;3906:4;3901:3;3897:14;3989:4;3982:5;3978:16;3972:23;4041:3;4035:4;4031:14;4024:4;4019:3;4015:14;4008:38;4061:69;4125:4;4111:12;4061:69;;;4053:77;;3926:216;4220:4;4213:5;4209:16;4203:23;4272:3;4266:4;4262:14;4255:4;4250:3;4246:14;4239:38;4292:69;4356:4;4342:12;4292:69;;;4284:77;;4152:221;4390:4;4383:11;;3879:520;;;;;;4406:213;;4524:2;4513:9;4509:18;4501:26;;4538:71;4606:1;4595:9;4591:17;4582:6;4538:71;;;4495:124;;;;;4626:301;;4764:2;4753:9;4749:18;4741:26;;4814:9;4808:4;4804:20;4800:1;4789:9;4785:17;4778:47;4839:78;4912:4;4903:6;4839:78;;;4831:86;;4735:192;;;;;4934:337;;5090:2;5079:9;5075:18;5067:26;;5140:9;5134:4;5130:20;5126:1;5115:9;5111:17;5104:47;5165:96;5256:4;5247:6;5165:96;;;5157:104;;5061:210;;;;;5278:256;;5340:2;5334:9;5324:19;;5378:4;5370:6;5366:17;5477:6;5465:10;5462:22;5441:18;5429:10;5426:34;5423:62;5420:2;;;5498:1;5495;5488:12;5420:2;5518:10;5514:2;5507:22;5318:216;;;;;5541:318;;5681:18;5673:6;5670:30;5667:2;;;5713:1;5710;5703:12;5667:2;5780:4;5776:9;5769:4;5761:6;5757:17;5753:33;5745:41;;5844:4;5838;5834:15;5826:23;;5604:255;;;;5866:322;;6010:18;6002:6;5999:30;5996:2;;;6042:1;6039;6032:12;5996:2;6109:4;6105:9;6098:4;6090:6;6086:17;6082:33;6074:41;;6173:4;6167;6163:15;6155:23;;5933:255;;;;6195:118;;6285:5;6279:12;6269:22;;6250:63;;;;6320:122;;6414:5;6408:12;6398:22;;6379:63;;;;6450:153;;6555:6;6550:3;6543:19;6592:4;6587:3;6583:14;6568:29;;6536:67;;;;;6612:163;;6727:6;6722:3;6715:19;6764:4;6759:3;6755:14;6740:29;;6708:67;;;;;6783:91;;6845:24;6863:5;6845:24;;;6834:35;;6828:46;;;;6881:121;;6954:42;6947:5;6943:54;6932:65;;6926:76;;;;7010:145;7091:6;7086:3;7081;7068:30;7147:1;7138:6;7133:3;7129:16;7122:27;7061:94;;;;7164:268;7229:1;7236:101;7250:6;7247:1;7244:13;7236:101;;;7326:1;7321:3;7317:11;7311:18;7307:1;7302:3;7298:11;7291:39;7272:2;7269:1;7265:10;7260:15;;7236:101;;;7352:6;7349:1;7346:13;7343:2;;;7417:1;7408:6;7403:3;7399:16;7392:27;7343:2;7213:219;;;;;7440:97;;7528:2;7524:7;7519:2;7512:5;7508:14;7504:28;7494:38;;7488:49;;;;7545:117;7614:24;7632:5;7614:24;;;7607:5;7604:35;7594:2;;7653:1;7650;7643:12;7594:2;7588:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\n\npragma experimental ABIEncoderV2;\n\ncontract Forex {\n\n    address public owner;\n\n    struct Pair {\n        string rate;\n        string timestamp;\n    }\n\n    mapping(address => bool) users;\n    mapping(bytes32 => Pair) pairs;\n\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n\n    modifier authorized() {\n        if (users[msg.sender]) _;\n    }\n\n    function authorize(address user) public restricted {\n        users[user] = true;\n    }\n\n    function set(string memory name, Pair memory pair) public authorized {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        pairs[nameHash] = pair;\n    }\n\n    function get(string memory name) public view returns (Pair memory) {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        return pairs[nameHash];\n    }\n}\n",
  "sourcePath": "/home/arsalen/Desktop/forex/eth-forex-dapp/contracts/Forex.sol",
  "ast": {
    "absolutePath": "/home/arsalen/Desktop/forex/eth-forex-dapp/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 105,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "317:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "327:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "335:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "335:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "327:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "327:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 105,
            "src": "296:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "380:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "394:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "394:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33,
                  "nodeType": "IfStatement",
                  "src": "390:26:0",
                  "trueBody": {
                    "id": 32,
                    "nodeType": "PlaceholderStatement",
                    "src": "415:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:0"
            },
            "src": "358:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "451:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 40,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "471:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "461:24:0",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "PlaceholderStatement",
                    "src": "484:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "src": "429:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "549:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "559:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "559:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "573:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "559:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "559:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 48,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "538:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "538:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "517:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:14:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:0"
            },
            "scope": 105,
            "src": "498:86:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "659:96:0",
              "statements": [
                {
                  "assignments": [
                    68
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "710:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "699:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "689:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "726:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "726:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "726:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "726:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 65,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "648:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "603:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "623:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "623:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:38:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 105,
            "src": "590:165:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "828:96:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "839:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "879:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 92,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "858:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "902:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "908:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "902:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "895:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "774:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:20:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "815:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 87,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:13:0"
            },
            "scope": 105,
            "src": "761:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "101:825:0"
      }
    ],
    "src": "32:895:0"
  },
  "legacyAST": {
    "absolutePath": "/home/arsalen/Desktop/forex/eth-forex-dapp/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 105,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "317:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "327:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "335:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "335:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "327:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "327:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 105,
            "src": "296:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "380:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "394:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "394:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33,
                  "nodeType": "IfStatement",
                  "src": "390:26:0",
                  "trueBody": {
                    "id": 32,
                    "nodeType": "PlaceholderStatement",
                    "src": "415:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:0"
            },
            "src": "358:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "451:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 40,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "471:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "461:24:0",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "PlaceholderStatement",
                    "src": "484:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "src": "429:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "549:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "559:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "559:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "573:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "559:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "559:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 48,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "538:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "538:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "517:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:14:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:0"
            },
            "scope": 105,
            "src": "498:86:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "659:96:0",
              "statements": [
                {
                  "assignments": [
                    68
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "710:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "699:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "689:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "726:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "726:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "726:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "726:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 65,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "648:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "603:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "623:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "623:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:38:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 105,
            "src": "590:165:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "828:96:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "839:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "879:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 92,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "858:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "902:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "908:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "902:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "895:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "774:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:20:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "815:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 87,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:13:0"
            },
            "scope": 105,
            "src": "761:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "101:825:0"
      }
    ],
    "src": "32:895:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-08-07T00:43:56.991Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
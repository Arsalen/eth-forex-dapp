{
  "contractName": "Forex",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb6a5d7de"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "name": "rate",
              "type": "string"
            },
            {
              "name": "timestamp",
              "type": "string"
            }
          ],
          "name": "pair",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x794e2631"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "name": "rate",
              "type": "string"
            },
            {
              "name": "timestamp",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x693ec85e"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109c2806100606000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063693ec85e14610067578063794e2631146100a45780638da5cb5b146100cd578063b6a5d7de146100f8575b600080fd5b34801561007357600080fd5b5061008e6004803603610089919081019061068b565b610121565b60405161009b9190610834565b60405180910390f35b3480156100b057600080fd5b506100cb60048036036100c691908101906106cc565b6102be565b005b3480156100d957600080fd5b506100e2610392565b6040516100ef91906107f7565b60405180910390f35b34801561010457600080fd5b5061011f600480360361011a9190810190610662565b6103b7565b005b610129610467565b60008260405160200161013c9190610812565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561038e576000826040516020016103239190610812565b6040516020818303038152906040528051906020012090508160026000838152602001908152602001600020600082015181600001908051906020019061036b929190610481565b506020820151816001019080519060200190610388929190610481565b50905050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104645760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b604080519081016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104c257805160ff19168380011785556104f0565b828001600101855582156104f0579182015b828111156104ef5782518255916020019190600101906104d4565b5b5090506104fd9190610501565b5090565b61052391905b8082111561051f576000816000905550600101610507565b5090565b90565b60006105328235610923565b905092915050565b600082601f830112151561054d57600080fd5b813561056061055b82610883565b610856565b9150808252602083016020830185838301111561057c57600080fd5b610587838284610935565b50505092915050565b600082601f83011215156105a357600080fd5b81356105b66105b1826108af565b610856565b915080825260208301602083018583830111156105d257600080fd5b6105dd838284610935565b50505092915050565b6000604082840312156105f857600080fd5b6106026040610856565b9050600082013567ffffffffffffffff81111561061e57600080fd5b61062a8482850161053a565b600083015250602082013567ffffffffffffffff81111561064a57600080fd5b6106568482850161053a565b60208301525092915050565b60006020828403121561067457600080fd5b600061068284828501610526565b91505092915050565b60006020828403121561069d57600080fd5b600082013567ffffffffffffffff8111156106b757600080fd5b6106c384828501610590565b91505092915050565b600080604083850312156106df57600080fd5b600083013567ffffffffffffffff8111156106f957600080fd5b61070585828601610590565b925050602083013567ffffffffffffffff81111561072257600080fd5b61072e858286016105e6565b9150509250929050565b610741816108f1565b82525050565b6000610752826108e6565b808452610766816020860160208601610944565b61076f81610977565b602085010191505092915050565b6000610788826108db565b80845261079c816020860160208601610944565b6107a581610977565b602085010191505092915050565b600060408301600083015184820360008601526107d0828261077d565b915050602083015184820360208601526107ea828261077d565b9150508091505092915050565b600060208201905061080c6000830184610738565b92915050565b6000602082019050818103600083015261082c8184610747565b905092915050565b6000602082019050818103600083015261084e81846107b3565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561087957600080fd5b8060405250919050565b600067ffffffffffffffff82111561089a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156108c657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b60006108fc82610903565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061092e82610903565b9050919050565b82818337600083830152505050565b60005b83811015610962578082015181840152602081019050610947565b83811115610971576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820db059f4768fc61d171b4ec51364406e093250aefa063bdedb7b5ee702c7477c86c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063693ec85e14610067578063794e2631146100a45780638da5cb5b146100cd578063b6a5d7de146100f8575b600080fd5b34801561007357600080fd5b5061008e6004803603610089919081019061068b565b610121565b60405161009b9190610834565b60405180910390f35b3480156100b057600080fd5b506100cb60048036036100c691908101906106cc565b6102be565b005b3480156100d957600080fd5b506100e2610392565b6040516100ef91906107f7565b60405180910390f35b34801561010457600080fd5b5061011f600480360361011a9190810190610662565b6103b7565b005b610129610467565b60008260405160200161013c9190610812565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561020b5780601f106101e05761010080835404028352916020019161020b565b820191906000526020600020905b8154815290600101906020018083116101ee57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561038e576000826040516020016103239190610812565b6040516020818303038152906040528051906020012090508160026000838152602001908152602001600020600082015181600001908051906020019061036b929190610481565b506020820151816001019080519060200190610388929190610481565b50905050505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104645760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50565b604080519081016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104c257805160ff19168380011785556104f0565b828001600101855582156104f0579182015b828111156104ef5782518255916020019190600101906104d4565b5b5090506104fd9190610501565b5090565b61052391905b8082111561051f576000816000905550600101610507565b5090565b90565b60006105328235610923565b905092915050565b600082601f830112151561054d57600080fd5b813561056061055b82610883565b610856565b9150808252602083016020830185838301111561057c57600080fd5b610587838284610935565b50505092915050565b600082601f83011215156105a357600080fd5b81356105b66105b1826108af565b610856565b915080825260208301602083018583830111156105d257600080fd5b6105dd838284610935565b50505092915050565b6000604082840312156105f857600080fd5b6106026040610856565b9050600082013567ffffffffffffffff81111561061e57600080fd5b61062a8482850161053a565b600083015250602082013567ffffffffffffffff81111561064a57600080fd5b6106568482850161053a565b60208301525092915050565b60006020828403121561067457600080fd5b600061068284828501610526565b91505092915050565b60006020828403121561069d57600080fd5b600082013567ffffffffffffffff8111156106b757600080fd5b6106c384828501610590565b91505092915050565b600080604083850312156106df57600080fd5b600083013567ffffffffffffffff8111156106f957600080fd5b61070585828601610590565b925050602083013567ffffffffffffffff81111561072257600080fd5b61072e858286016105e6565b9150509250929050565b610741816108f1565b82525050565b6000610752826108e6565b808452610766816020860160208601610944565b61076f81610977565b602085010191505092915050565b6000610788826108db565b80845261079c816020860160208601610944565b6107a581610977565b602085010191505092915050565b600060408301600083015184820360008601526107d0828261077d565b915050602083015184820360208601526107ea828261077d565b9150508091505092915050565b600060208201905061080c6000830184610738565b92915050565b6000602082019050818103600083015261082c8184610747565b905092915050565b6000602082019050818103600083015261084e81846107b3565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561087957600080fd5b8060405250919050565b600067ffffffffffffffff82111561089a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156108c657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b60006108fc82610903565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061092e82610903565b9050919050565b82818337600083830152505050565b60005b83811015610962578082015181840152602081019050610947565b83811115610971576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820db059f4768fc61d171b4ec51364406e093250aefa063bdedb7b5ee702c7477c86c6578706572696d656e74616cf50037",
  "sourceMap": "101:825:0:-;;;296:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;296:56:0;335:10;327:5;;:18;;;;;;;;;;;;;;;;;;101:825;;;;;;",
  "deployedSourceMap": "101:825:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:163;;8:9:-1;5:2;;;30:1;27;20:12;5:2;761:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;590:165:0;;;;;;;;;;;;;;;;;;;123:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;123:20:0;;;;;;;;;;;;;;;;;;;;498:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:86:0;;;;;;;;;;;;;;;;;;;761:163;815:11;;:::i;:::-;839:16;879:4;868:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;868:16:0;;;858:27;;;;;;839:46;;902:5;:15;908:8;902:15;;;;;;;;;;;895:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;761:163;;;:::o;590:165::-;465:5;:17;471:10;465:17;;;;;;;;;;;;;;;;;;;;;;;;;461:24;;;670:16;710:4;699:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;699:16:0;;;689:27;;;;;;670:46;;744:4;726:5;:15;732:8;726:15;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;484:1;461:24;590:165;;:::o;123:20::-;;;;;;;;;;;;;:::o;498:86::-;408:5;;;;;;;;;;;394:19;;:10;:19;;;390:26;;;573:4;559:5;:11;565:4;559:11;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;390:26;498:86;:::o;101:825::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;131:434;;229:3;222:4;214:6;210:17;206:27;199:35;196:2;;;247:1;244;237:12;196:2;284:6;271:20;306:61;321:45;359:6;321:45;;;306:61;;;297:70;;387:6;380:5;373:21;423:4;415:6;411:17;456:4;449:5;445:16;491:3;482:6;477:3;473:16;470:25;467:2;;;508:1;505;498:12;467:2;518:41;552:6;547:3;542;518:41;;;189:376;;;;;;;;574:442;;676:3;669:4;661:6;657:17;653:27;646:35;643:2;;;694:1;691;684:12;643:2;731:6;718:20;753:65;768:49;810:6;768:49;;;753:65;;;744:74;;838:6;831:5;824:21;874:4;866:6;862:17;907:4;900:5;896:16;942:3;933:6;928:3;924:16;921:25;918:2;;;959:1;956;949:12;918:2;969:41;1003:6;998:3;993;969:41;;;636:380;;;;;;;;1048:649;;1156:4;1144:9;1139:3;1135:19;1131:30;1128:2;;;1174:1;1171;1164:12;1128:2;1192:20;1207:4;1192:20;;;1183:29;;1290:1;1279:9;1275:17;1262:31;1313:18;1305:6;1302:30;1299:2;;;1345:1;1342;1335:12;1299:2;1379:55;1430:3;1421:6;1410:9;1406:22;1379:55;;;1373:3;1366:5;1362:15;1355:80;1222:224;1529:2;1518:9;1514:18;1501:32;1553:18;1545:6;1542:30;1539:2;;;1585:1;1582;1575:12;1539:2;1620:55;1671:3;1662:6;1651:9;1647:22;1620:55;;;1613:4;1606:5;1602:16;1595:81;1456:231;1122:575;;;;;1704:241;;1808:2;1796:9;1787:7;1783:23;1779:32;1776:2;;;1824:1;1821;1814:12;1776:2;1859:1;1876:53;1921:7;1912:6;1901:9;1897:22;1876:53;;;1866:63;;1838:97;1770:175;;;;;1952:347;;2066:2;2054:9;2045:7;2041:23;2037:32;2034:2;;;2082:1;2079;2072:12;2034:2;2145:1;2134:9;2130:17;2117:31;2168:18;2160:6;2157:30;2154:2;;;2200:1;2197;2190:12;2154:2;2220:63;2275:7;2266:6;2255:9;2251:22;2220:63;;;2210:73;;2096:193;2028:271;;;;;2306:596;;;2456:2;2444:9;2435:7;2431:23;2427:32;2424:2;;;2472:1;2469;2462:12;2424:2;2535:1;2524:9;2520:17;2507:31;2558:18;2550:6;2547:30;2544:2;;;2590:1;2587;2580:12;2544:2;2610:63;2665:7;2656:6;2645:9;2641:22;2610:63;;;2600:73;;2486:193;2738:2;2727:9;2723:18;2710:32;2762:18;2754:6;2751:30;2748:2;;;2794:1;2791;2784:12;2748:2;2814:72;2878:7;2869:6;2858:9;2854:22;2814:72;;;2804:82;;2689:203;2418:484;;;;;;2909:110;2982:31;3007:5;2982:31;;;2977:3;2970:44;2964:55;;;3026:300;;3128:39;3161:5;3128:39;;;3184:6;3179:3;3172:19;3196:63;3252:6;3245:4;3240:3;3236:14;3229:4;3222:5;3218:16;3196:63;;;3291:29;3313:6;3291:29;;;3284:4;3279:3;3275:14;3271:50;3264:57;;3108:218;;;;;;3333:292;;3431:35;3460:5;3431:35;;;3483:6;3478:3;3471:19;3495:63;3551:6;3544:4;3539:3;3535:14;3528:4;3521:5;3517:16;3495:63;;;3590:29;3612:6;3590:29;;;3583:4;3578:3;3574:14;3570:50;3563:57;;3411:214;;;;;;3677:622;;3806:4;3801:3;3797:14;3892:3;3885:5;3881:15;3875:22;3941:3;3935:4;3931:14;3925:3;3920;3916:13;3909:37;3961:68;4024:4;4011:11;3961:68;;;3953:76;;3826:215;4122:4;4115:5;4111:16;4105:23;4173:3;4167:4;4163:14;4156:4;4151:3;4147:14;4140:38;4193:68;4256:4;4243:11;4193:68;;;4185:76;;4051:222;4290:4;4283:11;;3779:520;;;;;;4306:193;;4414:2;4403:9;4399:18;4391:26;;4428:61;4486:1;4475:9;4471:17;4462:6;4428:61;;;4385:114;;;;;4506:281;;4634:2;4623:9;4619:18;4611:26;;4684:9;4678:4;4674:20;4670:1;4659:9;4655:17;4648:47;4709:68;4772:4;4763:6;4709:68;;;4701:76;;4605:182;;;;;4794:317;;4940:2;4929:9;4925:18;4917:26;;4990:9;4984:4;4980:20;4976:1;4965:9;4961:17;4954:47;5015:86;5096:4;5087:6;5015:86;;;5007:94;;4911:200;;;;;5118:256;;5180:2;5174:9;5164:19;;5218:4;5210:6;5206:17;5317:6;5305:10;5302:22;5281:18;5269:10;5266:34;5263:62;5260:2;;;5338:1;5335;5328:12;5260:2;5358:10;5354:2;5347:22;5158:216;;;;;5381:255;;5521:18;5513:6;5510:30;5507:2;;;5553:1;5550;5543:12;5507:2;5597:4;5593:9;5586:4;5578:6;5574:17;5570:33;5562:41;;5626:4;5620;5616:15;5608:23;;5444:192;;;;5643:259;;5787:18;5779:6;5776:30;5773:2;;;5819:1;5816;5809:12;5773:2;5863:4;5859:9;5852:4;5844:6;5840:17;5836:33;5828:41;;5892:4;5886;5882:15;5874:23;;5710:192;;;;5909:88;;5986:5;5980:12;5970:22;;5964:33;;;;6004:92;;6085:5;6079:12;6069:22;;6063:33;;;;6103:105;;6172:31;6197:5;6172:31;;;6161:42;;6155:53;;;;6215:128;;6295:42;6288:5;6284:54;6273:65;;6267:76;;;;6350:105;;6419:31;6444:5;6419:31;;;6408:42;;6402:53;;;;6463:145;6544:6;6539:3;6534;6521:30;6600:1;6591:6;6586:3;6582:16;6575:27;6514:94;;;;6617:268;6682:1;6689:101;6703:6;6700:1;6697:13;6689:101;;;6779:1;6774:3;6770:11;6764:18;6760:1;6755:3;6751:11;6744:39;6725:2;6722:1;6718:10;6713:15;;6689:101;;;6805:6;6802:1;6799:13;6796:2;;;6870:1;6861:6;6856:3;6852:16;6845:27;6796:2;6666:219;;;;;6893:97;;6981:2;6977:7;6972:2;6965:5;6961:14;6957:28;6947:38;;6941:49;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\n\npragma experimental ABIEncoderV2;\n\ncontract Forex {\n\n    address public owner;\n\n    struct Pair {\n        string rate;\n        string timestamp;\n    }\n\n    mapping(address => bool) users;\n    mapping(bytes32 => Pair) pairs;\n\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n\n    modifier authorized() {\n        if (users[msg.sender]) _;\n    }\n\n    function authorize(address user) public restricted {\n        users[user] = true;\n    }\n\n    function set(string memory name, Pair memory pair) public authorized {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        pairs[nameHash] = pair;\n    }\n\n    function get(string memory name) public view returns (Pair memory) {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        return pairs[nameHash];\n    }\n}\n",
  "sourcePath": "/var/lib/jenkins/workspace/eth-sample-dapp_master/contracts/Forex.sol",
  "ast": {
    "absolutePath": "/var/lib/jenkins/workspace/eth-sample-dapp_master/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 105,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "317:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "327:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "335:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "335:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "327:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "327:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 105,
            "src": "296:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "380:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "394:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "394:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33,
                  "nodeType": "IfStatement",
                  "src": "390:26:0",
                  "trueBody": {
                    "id": 32,
                    "nodeType": "PlaceholderStatement",
                    "src": "415:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:0"
            },
            "src": "358:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "451:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 40,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "471:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "461:24:0",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "PlaceholderStatement",
                    "src": "484:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "src": "429:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "549:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "559:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "559:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "573:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "559:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "559:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 48,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "538:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "538:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "517:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:14:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:0"
            },
            "scope": 105,
            "src": "498:86:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "659:96:0",
              "statements": [
                {
                  "assignments": [
                    68
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "710:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "699:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "689:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "726:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "726:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "726:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "726:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 65,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "648:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "603:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "623:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "623:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:38:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 105,
            "src": "590:165:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "828:96:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "839:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "879:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 92,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "858:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "902:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "908:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "902:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "895:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "774:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:20:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "815:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 87,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:13:0"
            },
            "scope": 105,
            "src": "761:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "101:825:0"
      }
    ],
    "src": "32:895:0"
  },
  "legacyAST": {
    "absolutePath": "/var/lib/jenkins/workspace/eth-sample-dapp_master/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        105
      ]
    },
    "id": 106,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 105,
        "linearizedBaseContracts": [
          105
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 105,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 105,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "317:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "327:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 21,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "335:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "335:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "327:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "327:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:0:0"
            },
            "scope": 105,
            "src": "296:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "380:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "394:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "394:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "408:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "394:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 33,
                  "nodeType": "IfStatement",
                  "src": "390:26:0",
                  "trueBody": {
                    "id": 32,
                    "nodeType": "PlaceholderStatement",
                    "src": "415:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:2:0"
            },
            "src": "358:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "451:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 37,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "465:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 40,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "471:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "465:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 42,
                  "nodeType": "IfStatement",
                  "src": "461:24:0",
                  "trueBody": {
                    "id": 41,
                    "nodeType": "PlaceholderStatement",
                    "src": "484:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 44,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "src": "429:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "549:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "559:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 53,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "565:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "559:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "573:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "559:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "559:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 58,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 49,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 48,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35,
                  "src": "538:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "538:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "517:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:14:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "549:0:0"
            },
            "scope": 105,
            "src": "498:86:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "659:96:0",
              "statements": [
                {
                  "assignments": [
                    68
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "670:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 72,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "710:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 70,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "699:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "699:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 69,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "689:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "670:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 76,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "726:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "726:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "744:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "726:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "726:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 65,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 64,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 44,
                  "src": "648:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "603:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "623:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 61,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "623:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "602:38:0"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:0"
            },
            "scope": 105,
            "src": "590:165:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "828:96:0",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 103,
                      "src": "839:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "839:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 95,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "879:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144,
                            "src": "868:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "868:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 92,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "858:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "839:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 99,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "902:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "908:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "902:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 89,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "895:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "774:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:20:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "815:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 87,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "814:13:0"
            },
            "scope": 105,
            "src": "761:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 106,
        "src": "101:825:0"
      }
    ],
    "src": "32:895:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x58309EF38ea0903AdBcFb9d0aC0123E35160Df5B",
      "transactionHash": "0x50f6d3e7707ffd21ab2f022b46fe98c56e6f6f4e42f9dad7db8ae9a75b8a46e7"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2020-08-07T09:46:07.756Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}
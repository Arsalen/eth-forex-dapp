{
  "contractName": "Forex",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_authorized",
          "type": "bool"
        }
      ],
      "name": "Authorization",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_nameHash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "rate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct Forex.Pair",
          "name": "_pair",
          "type": "tuple"
        }
      ],
      "name": "Settlement",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "unauthorize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "rate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            }
          ],
          "internalType": "struct Forex.Pair",
          "name": "pair",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "rate",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "timestamp",
              "type": "string"
            }
          ],
          "internalType": "struct Forex.Pair",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"name\":\"Authorization\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_nameHash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"rate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct Forex.Pair\",\"name\":\"_pair\",\"type\":\"tuple\"}],\"name\":\"Settlement\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"get\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"rate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"}],\"internalType\":\"struct Forex.Pair\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"rate\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"timestamp\",\"type\":\"string\"}],\"internalType\":\"struct Forex.Pair\",\"name\":\"pair\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/arsalen/Desktop/ethereum-oracle-api-dapp/eth-sample-dapp/contracts/Forex.sol\":\"Forex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/arsalen/Desktop/ethereum-oracle-api-dapp/eth-sample-dapp/contracts/Forex.sol\":{\"keccak256\":\"0x3ccec965fb49bd693eeed43d7bd8b0bc7c1f33c8aa81c961b9ad502be4e9bb38\",\"urls\":[\"bzz-raw://aa93e9da75fce36cddee5011c6fd76e913df5915565a1a992c68b89d13a0686c\",\"dweb:/ipfs/QmR7AGjbT2RryTveiW8WoSu1cmoB5Y1LdqTFRNjArzTMQ9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610bbd806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063693ec85e1461005c578063794e26311461008c5780638da5cb5b146100a8578063b6a5d7de146100c6578063f0b37c04146100e2575b600080fd5b610076600480360361007191908101906107c3565b6100fe565b60405161008391906109e9565b60405180910390f35b6100a660048036036100a19190810190610804565b61029b565b005b6100b06103a8565b6040516100bd9190610953565b60405180910390f35b6100e060048036036100db919081019061079a565b6103cd565b005b6100fc60048036036100f7919081019061079a565b6104b7565b005b6101066105a2565b60008260405160200161011991906109c7565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101e85780601f106101bd576101008083540402835291602001916101e8565b820191906000526020600020905b8154815290600101906020018083116101cb57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103a45760008260405160200161030091906109c7565b604051602081830303815290604052805190602001209050816002600083815260200190815260200160002060008201518160000190805190602001906103489291906105bc565b5060208201518160010190805190602001906103659291906105bc565b509050507f9a5587419bbe176e8391f06898d25f241100a906a603045f3d7484c9359e6d72818360405161039a929190610997565b60405180910390a1505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104b45760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f71b03471b324bbcc7546b2626d0407dbb70a61e5e77c56214352d9c12893933f8160016040516104ab92919061096e565b60405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561059f576000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f71b03471b324bbcc7546b2626d0407dbb70a61e5e77c56214352d9c12893933f81600060405161059692919061096e565b60405180910390a15b50565b604051806040016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105fd57805160ff191683800117855561062b565b8280016001018555821561062b579182015b8281111561062a57825182559160200191906001019061060f565b5b509050610638919061063c565b5090565b61065e91905b8082111561065a576000816000905550600101610642565b5090565b90565b60008135905061067081610b63565b92915050565b600082601f83011261068757600080fd5b813561069a61069582610a38565b610a0b565b915080825260208301602083018583830111156106b657600080fd5b6106c1838284610b10565b50505092915050565b600082601f8301126106db57600080fd5b81356106ee6106e982610a64565b610a0b565b9150808252602083016020830185838301111561070a57600080fd5b610715838284610b10565b50505092915050565b60006040828403121561073057600080fd5b61073a6040610a0b565b9050600082013567ffffffffffffffff81111561075657600080fd5b61076284828501610676565b600083015250602082013567ffffffffffffffff81111561078257600080fd5b61078e84828501610676565b60208301525092915050565b6000602082840312156107ac57600080fd5b60006107ba84828501610661565b91505092915050565b6000602082840312156107d557600080fd5b600082013567ffffffffffffffff8111156107ef57600080fd5b6107fb848285016106ca565b91505092915050565b6000806040838503121561081757600080fd5b600083013567ffffffffffffffff81111561083157600080fd5b61083d858286016106ca565b925050602083013567ffffffffffffffff81111561085a57600080fd5b6108668582860161071e565b9150509250929050565b61087981610ac8565b82525050565b61088881610ada565b82525050565b61089781610ae6565b82525050565b60006108a882610a9b565b6108b28185610ab7565b93506108c2818560208601610b1f565b6108cb81610b52565b840191505092915050565b60006108e182610a90565b6108eb8185610aa6565b93506108fb818560208601610b1f565b61090481610b52565b840191505092915050565b6000604083016000830151848203600086015261092c82826108d6565b9150506020830151848203602086015261094682826108d6565b9150508091505092915050565b60006020820190506109686000830184610870565b92915050565b60006040820190506109836000830185610870565b610990602083018461087f565b9392505050565b60006040820190506109ac600083018561088e565b81810360208301526109be818461090f565b90509392505050565b600060208201905081810360008301526109e1818461089d565b905092915050565b60006020820190508181036000830152610a03818461090f565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610a2e57600080fd5b8060405250919050565b600067ffffffffffffffff821115610a4f57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610a7b57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ad382610af0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610b3d578082015181840152602081019050610b22565b83811115610b4c576000848401525b50505050565b6000601f19601f8301169050919050565b610b6c81610ac8565b8114610b7757600080fd5b5056fea365627a7a723158205ef8d412f969cc90946d6a063edb80ad9f987450535f10f4b69daa706b700e366c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063693ec85e1461005c578063794e26311461008c5780638da5cb5b146100a8578063b6a5d7de146100c6578063f0b37c04146100e2575b600080fd5b610076600480360361007191908101906107c3565b6100fe565b60405161008391906109e9565b60405180910390f35b6100a660048036036100a19190810190610804565b61029b565b005b6100b06103a8565b6040516100bd9190610953565b60405180910390f35b6100e060048036036100db919081019061079a565b6103cd565b005b6100fc60048036036100f7919081019061079a565b6104b7565b005b6101066105a2565b60008260405160200161011991906109c7565b60405160208183030381529060405280519060200120905060026000828152602001908152602001600020604051806040016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101e85780601f106101bd576101008083540402835291602001916101e8565b820191906000526020600020905b8154815290600101906020018083116101cb57829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b505050505081525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156103a45760008260405160200161030091906109c7565b604051602081830303815290604052805190602001209050816002600083815260200190815260200160002060008201518160000190805190602001906103489291906105bc565b5060208201518160010190805190602001906103659291906105bc565b509050507f9a5587419bbe176e8391f06898d25f241100a906a603045f3d7484c9359e6d72818360405161039a929190610997565b60405180910390a1505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156104b45760018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f71b03471b324bbcc7546b2626d0407dbb70a61e5e77c56214352d9c12893933f8160016040516104ab92919061096e565b60405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561059f576000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f71b03471b324bbcc7546b2626d0407dbb70a61e5e77c56214352d9c12893933f81600060405161059692919061096e565b60405180910390a15b50565b604051806040016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105fd57805160ff191683800117855561062b565b8280016001018555821561062b579182015b8281111561062a57825182559160200191906001019061060f565b5b509050610638919061063c565b5090565b61065e91905b8082111561065a576000816000905550600101610642565b5090565b90565b60008135905061067081610b63565b92915050565b600082601f83011261068757600080fd5b813561069a61069582610a38565b610a0b565b915080825260208301602083018583830111156106b657600080fd5b6106c1838284610b10565b50505092915050565b600082601f8301126106db57600080fd5b81356106ee6106e982610a64565b610a0b565b9150808252602083016020830185838301111561070a57600080fd5b610715838284610b10565b50505092915050565b60006040828403121561073057600080fd5b61073a6040610a0b565b9050600082013567ffffffffffffffff81111561075657600080fd5b61076284828501610676565b600083015250602082013567ffffffffffffffff81111561078257600080fd5b61078e84828501610676565b60208301525092915050565b6000602082840312156107ac57600080fd5b60006107ba84828501610661565b91505092915050565b6000602082840312156107d557600080fd5b600082013567ffffffffffffffff8111156107ef57600080fd5b6107fb848285016106ca565b91505092915050565b6000806040838503121561081757600080fd5b600083013567ffffffffffffffff81111561083157600080fd5b61083d858286016106ca565b925050602083013567ffffffffffffffff81111561085a57600080fd5b6108668582860161071e565b9150509250929050565b61087981610ac8565b82525050565b61088881610ada565b82525050565b61089781610ae6565b82525050565b60006108a882610a9b565b6108b28185610ab7565b93506108c2818560208601610b1f565b6108cb81610b52565b840191505092915050565b60006108e182610a90565b6108eb8185610aa6565b93506108fb818560208601610b1f565b61090481610b52565b840191505092915050565b6000604083016000830151848203600086015261092c82826108d6565b9150506020830151848203602086015261094682826108d6565b9150508091505092915050565b60006020820190506109686000830184610870565b92915050565b60006040820190506109836000830185610870565b610990602083018461087f565b9392505050565b60006040820190506109ac600083018561088e565b81810360208301526109be818461090f565b90509392505050565b600060208201905081810360008301526109e1818461089d565b905092915050565b60006020820190508181036000830152610a03818461090f565b905092915050565b6000604051905081810181811067ffffffffffffffff82111715610a2e57600080fd5b8060405250919050565b600067ffffffffffffffff821115610a4f57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610a7b57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ad382610af0565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610b3d578082015181840152602081019050610b22565b83811115610b4c576000848401525b50505050565b6000601f19601f8301169050919050565b610b6c81610ac8565b8114610b7757600080fd5b5056fea365627a7a723158205ef8d412f969cc90946d6a063edb80ad9f987450535f10f4b69daa706b700e366c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "101:1153:0:-;;;407:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;407:56:0;446:10;438:5;;:18;;;;;;;;;;;;;;;;;;101:1153;;;;;;",
  "deployedSourceMap": "101:1153:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;101:1153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:163;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;877:206;;;;;;;;;;;;;;;;:::i;:::-;;123:20;;;:::i;:::-;;;;;;;;;;;;;;;;609:126;;;;;;;;;;;;;;;;:::i;:::-;;741:130;;;;;;;;;;;;;;;;:::i;:::-;;1089:163;1143:11;;:::i;:::-;1167:16;1207:4;1196:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1196:16:0;;;1186:27;;;;;;1167:46;;1230:5;:15;1236:8;1230:15;;;;;;;;;;;1223:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1089:163;;;:::o;877:206::-;576:5;:17;582:10;576:17;;;;;;;;;;;;;;;;;;;;;;;;;572:24;;;957:16;997:4;986:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;986:16:0;;;976:27;;;;;;957:46;;1031:4;1013:5;:15;1019:8;1013:15;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1050:26;1061:8;1071:4;1050:26;;;;;;;;;;;;;;;;595:1;572:24;877:206;;:::o;123:20::-;;;;;;;;;;;;;:::o;609:126::-;519:5;;;;;;;;;;;505:19;;:10;:19;;;501:26;;;684:4;670:5;:11;676:4;670:11;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;;;;;;;703:25;717:4;723;703:25;;;;;;;;;;;;;;;;501:26;609:126;:::o;741:130::-;519:5;;;;;;;;;;;505:19;;:10;:19;;;501:26;;;818:5;804;:11;810:4;804:11;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;838:26;852:4;858:5;838:26;;;;;;;;;;;;;;;;501;741:130;:::o;101:1153::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;143:434;;241:3;234:4;226:6;222:17;218:27;208:2;;259:1;256;249:12;208:2;296:6;283:20;318:61;333:45;371:6;333:45;;;318:61;;;309:70;;399:6;392:5;385:21;435:4;427:6;423:17;468:4;461:5;457:16;503:3;494:6;489:3;485:16;482:25;479:2;;;520:1;517;510:12;479:2;530:41;564:6;559:3;554;530:41;;;201:376;;;;;;;;586:442;;688:3;681:4;673:6;669:17;665:27;655:2;;706:1;703;696:12;655:2;743:6;730:20;765:65;780:49;822:6;780:49;;;765:65;;;756:74;;850:6;843:5;836:21;886:4;878:6;874:17;919:4;912:5;908:16;954:3;945:6;940:3;936:16;933:25;930:2;;;971:1;968;961:12;930:2;981:41;1015:6;1010:3;1005;981:41;;;648:380;;;;;;;;1060:650;;1168:4;1156:9;1151:3;1147:19;1143:30;1140:2;;;1186:1;1183;1176:12;1140:2;1204:20;1219:4;1204:20;;;1195:29;;1302:1;1291:9;1287:17;1274:31;1325:18;1317:6;1314:30;1311:2;;;1357:1;1354;1347:12;1311:2;1392:55;1443:3;1434:6;1423:9;1419:22;1392:55;;;1385:4;1378:5;1374:16;1367:81;1234:225;1542:2;1531:9;1527:18;1514:32;1566:18;1558:6;1555:30;1552:2;;;1598:1;1595;1588:12;1552:2;1633:55;1684:3;1675:6;1664:9;1660:22;1633:55;;;1626:4;1619:5;1615:16;1608:81;1469:231;1134:576;;;;;1717:241;;1821:2;1809:9;1800:7;1796:23;1792:32;1789:2;;;1837:1;1834;1827:12;1789:2;1872:1;1889:53;1934:7;1925:6;1914:9;1910:22;1889:53;;;1879:63;;1851:97;1783:175;;;;;1965:347;;2079:2;2067:9;2058:7;2054:23;2050:32;2047:2;;;2095:1;2092;2085:12;2047:2;2158:1;2147:9;2143:17;2130:31;2181:18;2173:6;2170:30;2167:2;;;2213:1;2210;2203:12;2167:2;2233:63;2288:7;2279:6;2268:9;2264:22;2233:63;;;2223:73;;2109:193;2041:271;;;;;2319:596;;;2469:2;2457:9;2448:7;2444:23;2440:32;2437:2;;;2485:1;2482;2475:12;2437:2;2548:1;2537:9;2533:17;2520:31;2571:18;2563:6;2560:30;2557:2;;;2603:1;2600;2593:12;2557:2;2623:63;2678:7;2669:6;2658:9;2654:22;2623:63;;;2613:73;;2499:193;2751:2;2740:9;2736:18;2723:32;2775:18;2767:6;2764:30;2761:2;;;2807:1;2804;2797:12;2761:2;2827:72;2891:7;2882:6;2871:9;2867:22;2827:72;;;2817:82;;2702:203;2431:484;;;;;;2922:113;3005:24;3023:5;3005:24;;;3000:3;2993:37;2987:48;;;3042:104;3119:21;3134:5;3119:21;;;3114:3;3107:34;3101:45;;;3153:113;3236:24;3254:5;3236:24;;;3231:3;3224:37;3218:48;;;3273:347;;3385:39;3418:5;3385:39;;;3436:71;3500:6;3495:3;3436:71;;;3429:78;;3512:52;3557:6;3552:3;3545:4;3538:5;3534:16;3512:52;;;3585:29;3607:6;3585:29;;;3580:3;3576:39;3569:46;;3365:255;;;;;;3627:319;;3725:35;3754:5;3725:35;;;3772:61;3826:6;3821:3;3772:61;;;3765:68;;3838:52;3883:6;3878:3;3871:4;3864:5;3860:16;3838:52;;;3911:29;3933:6;3911:29;;;3906:3;3902:39;3895:46;;3705:241;;;;;;3998:632;;4137:4;4132:3;4128:14;4220:4;4213:5;4209:16;4203:23;4272:3;4266:4;4262:14;4255:4;4250:3;4246:14;4239:38;4292:69;4356:4;4342:12;4292:69;;;4284:77;;4157:216;4451:4;4444:5;4440:16;4434:23;4503:3;4497:4;4493:14;4486:4;4481:3;4477:14;4470:38;4523:69;4587:4;4573:12;4523:69;;;4515:77;;4383:221;4621:4;4614:11;;4110:520;;;;;;4637:213;;4755:2;4744:9;4740:18;4732:26;;4769:71;4837:1;4826:9;4822:17;4813:6;4769:71;;;4726:124;;;;;4857:312;;4997:2;4986:9;4982:18;4974:26;;5011:71;5079:1;5068:9;5064:17;5055:6;5011:71;;;5093:66;5155:2;5144:9;5140:18;5131:6;5093:66;;;4968:201;;;;;;5176:448;;5360:2;5349:9;5345:18;5337:26;;5374:71;5442:1;5431:9;5427:17;5418:6;5374:71;;;5493:9;5487:4;5483:20;5478:2;5467:9;5463:18;5456:48;5518:96;5609:4;5600:6;5518:96;;;5510:104;;5331:293;;;;;;5631:301;;5769:2;5758:9;5754:18;5746:26;;5819:9;5813:4;5809:20;5805:1;5794:9;5790:17;5783:47;5844:78;5917:4;5908:6;5844:78;;;5836:86;;5740:192;;;;;5939:337;;6095:2;6084:9;6080:18;6072:26;;6145:9;6139:4;6135:20;6131:1;6120:9;6116:17;6109:47;6170:96;6261:4;6252:6;6170:96;;;6162:104;;6066:210;;;;;6283:256;;6345:2;6339:9;6329:19;;6383:4;6375:6;6371:17;6482:6;6470:10;6467:22;6446:18;6434:10;6431:34;6428:62;6425:2;;;6503:1;6500;6493:12;6425:2;6523:10;6519:2;6512:22;6323:216;;;;;6546:318;;6686:18;6678:6;6675:30;6672:2;;;6718:1;6715;6708:12;6672:2;6785:4;6781:9;6774:4;6766:6;6762:17;6758:33;6750:41;;6849:4;6843;6839:15;6831:23;;6609:255;;;;6871:322;;7015:18;7007:6;7004:30;7001:2;;;7047:1;7044;7037:12;7001:2;7114:4;7110:9;7103:4;7095:6;7091:17;7087:33;7079:41;;7178:4;7172;7168:15;7160:23;;6938:255;;;;7200:118;;7290:5;7284:12;7274:22;;7255:63;;;;7325:122;;7419:5;7413:12;7403:22;;7384:63;;;;7455:153;;7560:6;7555:3;7548:19;7597:4;7592:3;7588:14;7573:29;;7541:67;;;;;7617:163;;7732:6;7727:3;7720:19;7769:4;7764:3;7760:14;7745:29;;7713:67;;;;;7788:91;;7850:24;7868:5;7850:24;;;7839:35;;7833:46;;;;7886:85;;7959:5;7952:13;7945:21;7934:32;;7928:43;;;;7978:72;;8040:5;8029:16;;8023:27;;;;8057:121;;8130:42;8123:5;8119:54;8108:65;;8102:76;;;;8186:145;8267:6;8262:3;8257;8244:30;8323:1;8314:6;8309:3;8305:16;8298:27;8237:94;;;;8340:268;8405:1;8412:101;8426:6;8423:1;8420:13;8412:101;;;8502:1;8497:3;8493:11;8487:18;8483:1;8478:3;8474:11;8467:39;8448:2;8445:1;8441:10;8436:15;;8412:101;;;8528:6;8525:1;8522:13;8519:2;;;8593:1;8584:6;8579:3;8575:16;8568:27;8519:2;8389:219;;;;;8616:97;;8704:2;8700:7;8695:2;8688:5;8684:14;8680:28;8670:38;;8664:49;;;;8721:117;8790:24;8808:5;8790:24;;;8783:5;8780:35;8770:2;;8829:1;8826;8819:12;8770:2;8764:74;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.21 <0.7.0;\n\npragma experimental ABIEncoderV2;\n\ncontract Forex {\n\n    address public owner;\n\n    struct Pair {\n        string rate;\n        string timestamp;\n    }\n\n    mapping(address => bool) users;\n    mapping(bytes32 => Pair) pairs;\n\n    event Authorization(address _user, bool _authorized);\n    event Settlement(bytes32 _nameHash, Pair _pair);\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier restricted() {\n        if (msg.sender == owner) _;\n    }\n\n    modifier authorized() {\n        if (users[msg.sender]) _;\n    }\n\n    function authorize(address user) public restricted {\n        users[user] = true;\n        emit Authorization(user, true);\n    }\n\n    function unauthorize(address user) public restricted {\n        users[user] = false;\n        emit Authorization(user, false);\n    }\n\n    function set(string memory name, Pair memory pair) public authorized {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        pairs[nameHash] = pair;\n        emit Settlement(nameHash, pair);\n    }\n\n    function get(string memory name) public view returns (Pair memory) {\n\n        bytes32 nameHash = keccak256(abi.encode(name));\n        return pairs[nameHash];\n    }\n}\n",
  "sourcePath": "/home/arsalen/Desktop/ethereum-oracle-api-dapp/eth-sample-dapp/contracts/Forex.sol",
  "ast": {
    "absolutePath": "/home/arsalen/Desktop/ethereum-oracle-api-dapp/eth-sample-dapp/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        146
      ]
    },
    "id": 147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 146,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "Authorization",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "_authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "330:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:33:0"
            },
            "src": "295:53:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "Settlement",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "_nameHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "370:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "389:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 26,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:31:0"
            },
            "src": "353:48:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "428:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "438:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "446:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "438:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "438:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:0"
            },
            "scope": 146,
            "src": "407:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "491:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "505:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "505:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "519:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "505:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 45,
                  "nodeType": "IfStatement",
                  "src": "501:26:0",
                  "trueBody": {
                    "id": 44,
                    "nodeType": "PlaceholderStatement",
                    "src": "526:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:0"
            },
            "src": "469:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "562:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "576:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "582:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "582:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "576:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 54,
                  "nodeType": "IfStatement",
                  "src": "572:24:0",
                  "trueBody": {
                    "id": 53,
                    "nodeType": "PlaceholderStatement",
                    "src": "595:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:0"
            },
            "src": "540:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "660:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "670:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "676:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "670:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "684:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "670:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "670:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "717:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "Authorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "703:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "EmitStatement",
                  "src": "698:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 61,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 60,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "649:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "649:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "628:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "627:14:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:0"
            },
            "scope": 146,
            "src": "609:126:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "794:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "804:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "810:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "804:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "818:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "804:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "804:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "852:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 88,
                      "name": "Authorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "838:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "EmitStatement",
                  "src": "833:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 80,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 79,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "783:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "783:10:0"
              }
            ],
            "name": "unauthorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "762:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "761:14:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:0"
            },
            "scope": 146,
            "src": "741:130:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "946:137:0",
              "statements": [
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "957:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "957:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "997:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "986:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "986:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 105,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "976:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "957:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1013:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1019:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1013:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1031:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "1013:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1061:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1071:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                          "typeString": "struct Forex.Pair memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                          "typeString": "struct Forex.Pair memory"
                        }
                      ],
                      "id": 118,
                      "name": "Settlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1050:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Pair_$9_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct Forex.Pair memory)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1045:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 101,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 100,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56,
                  "src": "935:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "935:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "890:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "910:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 97,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "910:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:38:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:0"
            },
            "scope": 146,
            "src": "877:206:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1156:96:0",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1167:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1207:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1196:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1196:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1196:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 133,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "1186:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1167:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1230:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 142,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1236:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1230:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "1223:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1102:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:20:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1143:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 128,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "1143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1142:13:0"
            },
            "scope": 146,
            "src": "1089:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "101:1153:0"
      }
    ],
    "src": "32:1223:0"
  },
  "legacyAST": {
    "absolutePath": "/home/arsalen/Desktop/ethereum-oracle-api-dapp/eth-sample-dapp/contracts/Forex.sol",
    "exportedSymbols": {
      "Forex": [
        146
      ]
    },
    "id": 147,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 146,
        "linearizedBaseContracts": [
          146
        ],
        "name": "Forex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "123:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "123:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "Forex.Pair",
            "id": 9,
            "members": [
              {
                "constant": false,
                "id": 6,
                "name": "rate",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "172:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 5,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "172:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 9,
                "src": "193:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 7,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Pair",
            "nodeType": "StructDefinition",
            "scope": 146,
            "src": "150:66:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 13,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "222:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 12,
              "keyType": {
                "id": 10,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "230:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "222:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "241:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "name": "pairs",
            "nodeType": "VariableDeclaration",
            "scope": 146,
            "src": "258:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
              "typeString": "mapping(bytes32 => struct Forex.Pair)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "266:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "258:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                "typeString": "mapping(bytes32 => struct Forex.Pair)"
              },
              "valueType": {
                "contractScope": null,
                "id": 15,
                "name": "Pair",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 9,
                "src": "277:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                  "typeString": "struct Forex.Pair"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "Authorization",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "315:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "_authorized",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "330:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "314:33:0"
            },
            "src": "295:53:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "Settlement",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "_nameHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "370:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "389:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 26,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "389:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:31:0"
            },
            "src": "353:48:0"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "428:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 32,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "438:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "446:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "446:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "438:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "438:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "418:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:0"
            },
            "scope": 146,
            "src": "407:56:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "491:43:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "505:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "505:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 42,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "519:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "505:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 45,
                  "nodeType": "IfStatement",
                  "src": "501:26:0",
                  "trueBody": {
                    "id": 44,
                    "nodeType": "PlaceholderStatement",
                    "src": "526:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 47,
            "name": "restricted",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:0"
            },
            "src": "469:65:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "562:41:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "576:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 52,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "582:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "582:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "576:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 54,
                  "nodeType": "IfStatement",
                  "src": "572:24:0",
                  "trueBody": {
                    "id": 53,
                    "nodeType": "PlaceholderStatement",
                    "src": "595:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "name": "authorized",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:0"
            },
            "src": "540:63:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "660:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "670:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 65,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "676:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "670:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "684:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "670:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "670:18:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 70,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "717:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "Authorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "703:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73,
                  "nodeType": "EmitStatement",
                  "src": "698:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 61,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 60,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "649:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "649:10:0"
              }
            ],
            "name": "authorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "628:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "627:14:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:0:0"
            },
            "scope": 146,
            "src": "609:126:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 93,
              "nodeType": "Block",
              "src": "794:77:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "804:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 84,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "810:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "804:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "818:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "804:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "804:19:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "852:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "858:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 88,
                      "name": "Authorization",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "838:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "838:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "EmitStatement",
                  "src": "833:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 94,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 80,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 79,
                  "name": "restricted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 47,
                  "src": "783:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "783:10:0"
              }
            ],
            "name": "unauthorize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "scope": 94,
                  "src": "762:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "761:14:0"
            },
            "returnParameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:0:0"
            },
            "scope": 146,
            "src": "741:130:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "946:137:0",
              "statements": [
                {
                  "assignments": [
                    104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 123,
                      "src": "957:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 103,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "957:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 111,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 108,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "997:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 106,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "986:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "986:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 105,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "976:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "976:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "957:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1013:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                          "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 113,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1019:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1013:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_storage",
                        "typeString": "struct Forex.Pair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 115,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1031:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                        "typeString": "struct Forex.Pair memory"
                      }
                    },
                    "src": "1013:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1013:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "1061:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1071:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                          "typeString": "struct Forex.Pair memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                          "typeString": "struct Forex.Pair memory"
                        }
                      ],
                      "id": 118,
                      "name": "Settlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1050:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_struct$_Pair_$9_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,struct Forex.Pair memory)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1050:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "EmitStatement",
                  "src": "1045:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 101,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 100,
                  "name": "authorized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 56,
                  "src": "935:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "935:10:0"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 96,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "890:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "name": "pair",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "910:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 97,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "910:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:38:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:0"
            },
            "scope": 146,
            "src": "877:206:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 144,
              "nodeType": "Block",
              "src": "1156:96:0",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "name": "nameHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1167:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 136,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1207:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "1196:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1196:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1196:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 133,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 192,
                      "src": "1186:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1186:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1167:46:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 140,
                      "name": "pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1230:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Pair_$9_storage_$",
                        "typeString": "mapping(bytes32 => struct Forex.Pair storage ref)"
                      }
                    },
                    "id": 142,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 141,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1236:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1230:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage",
                      "typeString": "struct Forex.Pair storage ref"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 143,
                  "nodeType": "Return",
                  "src": "1223:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1102:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1101:20:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "1143:11:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Pair_$9_memory_ptr",
                    "typeString": "struct Forex.Pair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 128,
                    "name": "Pair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 9,
                    "src": "1143:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Pair_$9_storage_ptr",
                      "typeString": "struct Forex.Pair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1142:13:0"
            },
            "scope": 146,
            "src": "1089:163:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 147,
        "src": "101:1153:0"
      }
    ],
    "src": "32:1223:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x71b03471b324bbcc7546b2626d0407dbb70a61e5e77c56214352d9c12893933f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "_authorized",
              "type": "bool"
            }
          ],
          "name": "Authorization",
          "type": "event"
        },
        "0x9a5587419bbe176e8391f06898d25f241100a906a603045f3d7484c9359e6d72": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "_nameHash",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "rate",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "timestamp",
                  "type": "string"
                }
              ],
              "indexed": false,
              "internalType": "struct Forex.Pair",
              "name": "_pair",
              "type": "tuple"
            }
          ],
          "name": "Settlement",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7Fe0c23379aBd49eE51D33163bdE00AacF70f443",
      "transactionHash": "0xbe9d7f113c22ad62010e9000943fb7db48a8cc48943f07bfc7376db0cbe64002"
    }
  },
  "schemaVersion": "3.2.2",
  "updatedAt": "2020-08-08T00:28:20.126Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}